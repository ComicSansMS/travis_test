
language: cpp
os: linux
dist: trusty
group: travis_latest
sudo: false

matrix:
  include:
    - env: MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"
      addons: { apt: { packages: ["clang-4.0", "ninja-build"], sources: ["llvm-toolchain-trusty-4.0", "ubuntu-toolchain-r-test"] } }

    - env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
      addons: { apt: { packages: ["g++-7", "ninja-build", "doxygen", "graphviz", "mscgen"], sources: ["ubuntu-toolchain-r-test"] } }

    - os: osx
      osx_image: xcode9.2
      env: MATRIX_EVAL="CC=clang && CXX=clang++"

install:
  - eval "${MATRIX_EVAL}"

  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR}
  - cd ${DEPS_DIR}

  # install CMake 3.10
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
        echo "020740ee9132f55aa529782ee9f578ec *cmake-3.10.0-Linux-x86_64.tar.gz" > cmake_md5.txt
        travis_retry wget --no-check-certificate https://cmake.org/files/v3.10/cmake-3.10.0-Linux-x86_64.tar.gz
        md5sum -c cmake_md5.txt
        tar -xvf cmake-3.10.0-Linux-x86_64.tar.gz > /dev/null
        mv cmake-3.10.0-Linux-x86_64 cmake-install
        which cmake
        PATH=${DEPS_DIR}/cmake-install:${DEPS_DIR}/cmake-install/bin:$PATH
    elif [ "$TRAVIS_OS_NAME" == "osx" ]; then
        brew install cmake doxygen graphviz ninja || brew upgrade cmake doxygen graphviz ninja
    fi
  - which cmake
  - cmake --version

  # install libcxx
  - cd ${DEPS_DIR}
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      if [[ "${CXX%%+*}" == "clang" ]]; then
        if [[ "${CXX}" == "clang++-4.0" ]]; then LLVM_VERSION="4.0.0";
        fi
        LLVM_URL="http://llvm.org/releases/${LLVM_VERSION}/llvm-${LLVM_VERSION}.src.tar.xz"
        LIBCXX_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxx-${LLVM_VERSION}.src.tar.xz"
        LIBCXXABI_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxxabi-${LLVM_VERSION}.src.tar.xz"
        mkdir -p llvm llvm/build llvm/projects/libcxx llvm/projects/libcxxabi
        travis_retry wget -O - ${LLVM_URL} | tar --strip-components=1 -xJ -C llvm
        travis_retry wget -O - ${LIBCXX_URL} | tar --strip-components=1 -xJ -C llvm/projects/libcxx
        travis_retry wget -O - ${LIBCXXABI_URL} | tar --strip-components=1 -xJ -C llvm/projects/libcxxabi
        (cd llvm/build && cmake .. -DCMAKE_INSTALL_PREFIX=${DEPS_DIR}/llvm/install)
        (cd llvm/build/projects/libcxx && make install -j2)
        (cd llvm/build/projects/libcxxabi && make install -j2)
        export CXXFLAGS="-isystem ${DEPS_DIR}/llvm/install/include/c++/v1"
        export LDFLAGS="-L ${DEPS_DIR}/llvm/install/lib -l c++ -l c++abi"
        export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${DEPS_DIR}/llvm/install/lib"
      fi
    fi

  - ${CXX} --version
  - ninja --version

before_script:
  - cd ${TRAVIS_BUILD_DIR}
  - git clone https://github.com/ComicSansMS/GhulbusMath.git gbMath
  - cd gbMath
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=Release ..
  - cmake --build .
  - |
    if [[ "${CXX}" == "g++-7" ]]; then
        cd ${TRAVIS_BUILD_DIR}/gbMath
        mkdir build-coverage
        cd build-coverage
        cmake -DCMAKE_BUILD_TYPE=Debug -DGB_GENERATE_COVERAGE_INFO=ON -DGCOV_COMMAND=gcov-7 ..
        cmake --build .
    fi
  - cd ${TRAVIS_BUILD_DIR}/gbMath

script:
  - cd build
  - ctest -C Release
  - |
    if [[ "${CXX}" == "g++-7" ]]; then
        cd ../build-coverage
        ctest -C Debug
    fi
  - cd ${TRAVIS_BUILD_DIR}/gbMath

#after_success:
#  - |
#    if [[ "${CXX}" == "g++-7" ]]; then
#        cd ${TRAVIS_BUILD_DIR}/build-coverage
#        cmake --build . --target gbMath_TestCoverage
#        bash <(curl -s https://codecov.io/bash)
#    fi
